name: Docker Build and Push

on:
  push:
    branches:
      - main  

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Git Commit SHA
        run: echo "GIT_COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:${{ env.GIT_COMMIT_SHA }}
      
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: latest
        env:
          GIT_COMMIT_SHA: ${{ github.sha }}
     
      - name: Get Current Version
        id: get_version
        run: |
          # Get the current version from Chart.yaml
          VERSION=$(grep "version:" devops/Chart.yaml | awk '{print $2}')
          echo "Current version is $VERSION"

      - name: Increment Version
        id: increment_version
        run: |
          VERSION="0.1.0"  
          echo "Current version is $VERSION"
    
          IFS='.' read -r major minor patch <<< "$VERSION"
    
          patch=$((patch + 1))
    
          NEW_VERSION="$major.$minor.$patch"
          echo "New version is $NEW_VERSION"
    
          sed -i "s/version: .*/version: $NEW_VERSION/" devops/Chart.yaml

          cat devops/Chart.yaml

      - name: Package Helm Chart
        id: package_helm_chart
        run: |
          cd devops/
          helm package .
          CHART_TGZ=$(ls petclinic-*.tgz)
          echo "Chart package name is $CHART_TGZ"
          echo "CHART_TGZ=$CHART_TGZ" >> $GITHUB_ENV

      - name: Push Helm Chart to Repository using curl
        run: |
          curl --data-binary "@${CHART_TGZ}" \
          -H "Content-Type: application/x-gzip" \
          http://13.49.207.89:30511/api/charts
        env:
          CHART_TGZ: ${{ env.CHART_TGZ }}
